<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structzab_1_1deduce__type" kind="struct" language="C++" prot="public">
    <compoundname>zab::deduce_type</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structzab_1_1deduce__type_1ac541f936b35deac284df3f80f5b02ebe" prot="public" static="no">
        <type>T</type>
        <definition>using zab::deduce_type&lt; T &gt;::type =  T</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/simple_future.hpp" line="60" column="13" bodyfile="/home/donald/rupin/zab/includes/zab/simple_future.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/donald/rupin/zab/includes/zab/simple_future.hpp" line="59" column="5" bodyfile="/home/donald/rupin/zab/includes/zab/simple_future.hpp" bodystart="59" bodyend="61"/>
    <listofallmembers>
      <member refid="structzab_1_1deduce__type_1ac541f936b35deac284df3f80f5b02ebe" prot="public" virt="non-virtual"><scope>zab::deduce_type</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
