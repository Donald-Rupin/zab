<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter" kind="struct" language="C++" prot="public">
    <compoundname>zab::async_counting_semaphore&lt; 1 &gt;::waiter</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a5943bd30a6d42996a15ff110ca74397e" prot="public" static="no" mutable="no">
        <type>async_counting_semaphore &amp;</type>
        <definition>async_counting_semaphore&amp; zab::async_counting_semaphore&lt; 1 &gt;::waiter::semaphore_</definition>
        <argsstring></argsstring>
        <name>semaphore_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="302" column="46" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a4ded9f1430199db5c9671b12374d21d6" prot="public" static="no" mutable="no">
        <type><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref></type>
        <definition>thread_t zab::async_counting_semaphore&lt; 1 &gt;::waiter::thread_</definition>
        <argsstring></argsstring>
        <name>thread_</name>
        <initializer>= <ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="303" column="47" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1ae7bf7fe70f4e00f3a93692efefd98df8" prot="public" static="no" mutable="no">
        <type>waiter *</type>
        <definition>waiter* zab::async_counting_semaphore&lt; 1 &gt;::waiter::next_waiting_</definition>
        <argsstring></argsstring>
        <name>next_waiting_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="304" column="46" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a4168905fb10371a7767b07e9cce128c4" prot="public" static="no" mutable="no">
        <type>std::coroutine_handle</type>
        <definition>std::coroutine_handle zab::async_counting_semaphore&lt; 1 &gt;::waiter::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="305" column="24" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1ac0ef34bfb2d21e373a3aac3de60624e5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zab::async_counting_semaphore&lt; 1 &gt;::waiter::await_suspend</definition>
        <argsstring>(std::coroutine_handle&lt;&gt; _awaiter) noexcept</argsstring>
        <name>await_suspend</name>
        <param>
          <type>std::coroutine_handle&lt;&gt;</type>
          <declname>_awaiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="282" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="282" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1afca54b90816201f78cacd20395de8751" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zab::async_counting_semaphore&lt; 1 &gt;::waiter::await_ready</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="293" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a118ff50369ca5d5db3d9073b3f471c5f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zab::async_counting_semaphore&lt; 1 &gt;::waiter::await_resume</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="299" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="299" bodyend="300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>zab::thread_t</label>
        <link refid="structzab_1_1thread__t"/>
      </node>
      <node id="1">
        <label>zab::async_counting_semaphore&lt; 1 &gt;::waiter</label>
        <childnode refid="2" relation="usage">
          <edgelabel>thread_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="279" column="13" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="279" bodyend="306"/>
    <listofallmembers>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1afca54b90816201f78cacd20395de8751" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>await_ready</name></member>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a118ff50369ca5d5db3d9073b3f471c5f" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>await_resume</name></member>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1ac0ef34bfb2d21e373a3aac3de60624e5" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>await_suspend</name></member>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a4168905fb10371a7767b07e9cce128c4" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>handle_</name></member>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1ae7bf7fe70f4e00f3a93692efefd98df8" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>next_waiting_</name></member>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a5943bd30a6d42996a15ff110ca74397e" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>semaphore_</name></member>
      <member refid="structzab_1_1async__counting__semaphore_3_011_01_4_1_1waiter_1a4ded9f1430199db5c9671b12374d21d6" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore&lt; 1 &gt;::waiter</scope><name>thread_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
