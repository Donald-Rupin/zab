<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classzab_1_1async__barrier_1_1waiter" kind="class" language="C++" prot="public">
    <compoundname>zab::async_barrier::waiter</compoundname>
    <includes refid="async__barrier_8hpp" local="no">async_barrier.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classzab_1_1async__barrier_1_1waiter_1ac815e1bb8acfae89b7fcec6db4c06c5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class async_barrier</definition>
        <argsstring></argsstring>
        <name>async_barrier</name>
        <param>
          <type><ref refid="classzab_1_1async__barrier" kindref="compound">async_barrier</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="126" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzab_1_1async__barrier_1_1waiter_1a07953e400e105ac5448b5110696a6f7c" prot="private" static="no" mutable="no">
        <type><ref refid="classzab_1_1async__barrier" kindref="compound">async_barrier</ref> &amp;</type>
        <definition>async_barrier&amp; zab::async_barrier&lt; CompletionFunction &gt;::waiter::barrier_</definition>
        <argsstring></argsstring>
        <name>barrier_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="169" column="44" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzab_1_1async__barrier_1_1waiter_1acc9f165702ecfb388daeb1d115a53a5e" prot="private" static="no" mutable="no">
        <type>std::uintptr_t</type>
        <definition>std::uintptr_t zab::async_barrier&lt; CompletionFunction &gt;::waiter::next_</definition>
        <argsstring></argsstring>
        <name>next_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="170" column="45" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzab_1_1async__barrier_1_1waiter_1ae991272737622758d3968b1e16dd7e7c" prot="private" static="no" mutable="no">
        <type>std::coroutine_handle</type>
        <definition>std::coroutine_handle zab::async_barrier&lt; CompletionFunction &gt;::waiter::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="171" column="22" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzab_1_1async__barrier_1_1waiter_1a85584a3538b2e9b9e9933869ef36da33" prot="private" static="no" mutable="no">
        <type><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref></type>
        <definition>thread_t zab::async_barrier&lt; CompletionFunction &gt;::waiter::thread_</definition>
        <argsstring></argsstring>
        <name>thread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="172" column="45" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1afdabb9bf61cfc59ac9c1121498f617bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zab::async_barrier&lt; CompletionFunction &gt;::waiter::~waiter</definition>
        <argsstring>()=default</argsstring>
        <name>~waiter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="130" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1a0721cb466d750b100b032f422ac5351f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zab::async_barrier&lt; CompletionFunction &gt;::waiter::waiter</definition>
        <argsstring>(const waiter &amp;_copy)=delete</argsstring>
        <name>waiter</name>
        <param>
          <type>const <ref refid="classzab_1_1async__barrier_1_1waiter" kindref="compound">waiter</ref> &amp;</type>
          <declname>_copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="132" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1a25943cf7e8ea741421c6f443bdb8fe92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzab_1_1async__barrier_1_1waiter" kindref="compound">waiter</ref> &amp;</type>
        <definition>waiter&amp; zab::async_barrier&lt; CompletionFunction &gt;::waiter::operator=</definition>
        <argsstring>(const waiter &amp;_copy)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classzab_1_1async__barrier_1_1waiter" kindref="compound">waiter</ref> &amp;</type>
          <declname>_copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="135" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1aa4e520ce5a01b9e175b2c912717e70d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzab_1_1async__barrier_1_1waiter" kindref="compound">waiter</ref> &amp;</type>
        <definition>waiter&amp; zab::async_barrier&lt; CompletionFunction &gt;::waiter::operator=</definition>
        <argsstring>(waiter &amp;&amp;_copy)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classzab_1_1async__barrier_1_1waiter" kindref="compound">waiter</ref> &amp;&amp;</type>
          <declname>_copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="138" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1acd4d606b3bc9a00f2fda783a0734450c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zab::async_barrier&lt; CompletionFunction &gt;::waiter::await_suspend</definition>
        <argsstring>(std::coroutine_handle&lt;&gt; _awaiter) noexcept</argsstring>
        <name>await_suspend</name>
        <param>
          <type>std::coroutine_handle&lt;&gt;</type>
          <declname>_awaiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="141" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1a9e3eca301c52da1917fc703ee7b63f12" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zab::async_barrier&lt; CompletionFunction &gt;::waiter::await_ready</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="152" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1a167ae4360517e88cf9662099d846236a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zab::async_barrier&lt; CompletionFunction &gt;::waiter::await_resume</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="158" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="158" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1a8ac700d3e24ff578fafe57637d388e8b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zab::async_barrier&lt; CompletionFunction &gt;::waiter::waiter</definition>
        <argsstring>(async_barrier &amp;_barrier, thread_t _thread)</argsstring>
        <name>waiter</name>
        <param>
          <type><ref refid="classzab_1_1async__barrier" kindref="compound">async_barrier</ref> &amp;</type>
          <declname>_barrier</declname>
        </param>
        <param>
          <type><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref></type>
          <declname>_thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="163" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classzab_1_1async__barrier_1_1waiter_1aa4d160e204f4d91ebd156b2040b62f87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zab::async_barrier&lt; CompletionFunction &gt;::waiter::waiter</definition>
        <argsstring>(waiter &amp;&amp;_move)=default</argsstring>
        <name>waiter</name>
        <param>
          <type><ref refid="classzab_1_1async__barrier_1_1waiter" kindref="compound">waiter</ref> &amp;&amp;</type>
          <declname>_move</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="167" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is the subscribeable proxy for suspending on the barrier phase. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" line="124" column="13" bodyfile="/home/donald/rupin/zab/includes/zab/async_barrier.hpp" bodystart="124" bodyend="173"/>
    <listofallmembers>
      <member refid="classzab_1_1async__barrier_1_1waiter_1ac815e1bb8acfae89b7fcec6db4c06c5c" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>async_barrier</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a9e3eca301c52da1917fc703ee7b63f12" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>await_ready</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a167ae4360517e88cf9662099d846236a" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>await_resume</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1acd4d606b3bc9a00f2fda783a0734450c" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>await_suspend</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a07953e400e105ac5448b5110696a6f7c" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>barrier_</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1ae991272737622758d3968b1e16dd7e7c" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>handle_</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1acc9f165702ecfb388daeb1d115a53a5e" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>next_</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a25943cf7e8ea741421c6f443bdb8fe92" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>operator=</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1aa4e520ce5a01b9e175b2c912717e70d2" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>operator=</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a85584a3538b2e9b9e9933869ef36da33" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>thread_</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a0721cb466d750b100b032f422ac5351f" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>waiter</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1a8ac700d3e24ff578fafe57637d388e8b" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>waiter</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1aa4d160e204f4d91ebd156b2040b62f87" prot="private" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>waiter</name></member>
      <member refid="classzab_1_1async__barrier_1_1waiter_1afdabb9bf61cfc59ac9c1121498f617bd" prot="public" virt="non-virtual"><scope>zab::async_barrier::waiter</scope><name>~waiter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
