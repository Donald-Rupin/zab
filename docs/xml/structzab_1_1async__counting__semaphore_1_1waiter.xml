<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structzab_1_1async__counting__semaphore_1_1waiter" kind="struct" language="C++" prot="public">
    <compoundname>zab::async_counting_semaphore::waiter</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_1_1waiter_1a25861a055e334a19bc125fbf1f261080" prot="public" static="no" mutable="no">
        <type>async_counting_semaphore &amp;</type>
        <definition>async_counting_semaphore&amp; zab::async_counting_semaphore&lt; Count &gt;::waiter::semaphore_</definition>
        <argsstring></argsstring>
        <name>semaphore_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="96" column="46" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_1_1waiter_1aac7b5e8506c95489435c35c930588a42" prot="public" static="no" mutable="no">
        <type><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref></type>
        <definition>thread_t zab::async_counting_semaphore&lt; Count &gt;::waiter::thread_</definition>
        <argsstring></argsstring>
        <name>thread_</name>
        <initializer>= <ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="97" column="47" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_1_1waiter_1ada75fba6f150d7408fd93d2f67be108f" prot="public" static="no" mutable="no">
        <type>waiter *</type>
        <definition>waiter* zab::async_counting_semaphore&lt; Count &gt;::waiter::next_waiting_</definition>
        <argsstring></argsstring>
        <name>next_waiting_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="98" column="46" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1async__counting__semaphore_1_1waiter_1a4869697a871c3d71676880b03ceb97ec" prot="public" static="no" mutable="no">
        <type>std::coroutine_handle</type>
        <definition>std::coroutine_handle zab::async_counting_semaphore&lt; Count &gt;::waiter::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="99" column="24" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structzab_1_1async__counting__semaphore_1_1waiter_1a5a0e5a3f8d6ee87f1ecf04cf6e6b9a74" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zab::async_counting_semaphore&lt; Count &gt;::waiter::await_suspend</definition>
        <argsstring>(std::coroutine_handle&lt;&gt; _awaiter) noexcept</argsstring>
        <name>await_suspend</name>
        <param>
          <type>std::coroutine_handle&lt;&gt;</type>
          <declname>_awaiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="60" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="60" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structzab_1_1async__counting__semaphore_1_1waiter_1a4376740ac639748ebb6ac6166b98c7ca" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zab::async_counting_semaphore&lt; Count &gt;::waiter::await_ready</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="87" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structzab_1_1async__counting__semaphore_1_1waiter_1ab8f900fe060357f88e02e8a16a6afecd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zab::async_counting_semaphore&lt; Count &gt;::waiter::await_resume</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="93" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="93" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>zab::thread_t</label>
        <link refid="structzab_1_1thread__t"/>
      </node>
      <node id="1">
        <label>zab::async_counting_semaphore&lt; Count &gt;::waiter</label>
        <childnode refid="2" relation="usage">
          <edgelabel>thread_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" line="57" column="13" bodyfile="/home/donald/rupin/zab/includes/zab/async_semaphore.hpp" bodystart="57" bodyend="100"/>
    <listofallmembers>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1a4376740ac639748ebb6ac6166b98c7ca" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>await_ready</name></member>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1ab8f900fe060357f88e02e8a16a6afecd" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>await_resume</name></member>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1a5a0e5a3f8d6ee87f1ecf04cf6e6b9a74" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>await_suspend</name></member>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1a4869697a871c3d71676880b03ceb97ec" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>handle_</name></member>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1ada75fba6f150d7408fd93d2f67be108f" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>next_waiting_</name></member>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1a25861a055e334a19bc125fbf1f261080" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>semaphore_</name></member>
      <member refid="structzab_1_1async__counting__semaphore_1_1waiter_1aac7b5e8506c95489435c35c930588a42" prot="public" virt="non-virtual"><scope>zab::async_counting_semaphore::waiter</scope><name>thread_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
