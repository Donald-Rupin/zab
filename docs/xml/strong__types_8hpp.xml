<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="strong__types_8hpp" kind="file" language="C++">
    <compoundname>strong_types.hpp</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">concepts</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">limits</includes>
    <includes local="no">ostream</includes>
    <includedby refid="async__barrier_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/async_barrier.hpp</includedby>
    <includedby refid="async__file_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/async_file.hpp</includedby>
    <includedby refid="async__latch_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/async_latch.hpp</includedby>
    <includedby refid="async__semaphore_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/async_semaphore.hpp</includedby>
    <includedby refid="engine__enabled_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/engine_enabled.hpp</includedby>
    <includedby refid="event_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/event.hpp</includedby>
    <includedby refid="first__of_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/first_of.hpp</includedby>
    <includedby refid="network__operation_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/network_operation.hpp</includedby>
    <includedby refid="pause_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/pause.hpp</includedby>
    <includedby refid="pause__token_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/pause_token.hpp</includedby>
    <includedby refid="signal__handler_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/signal_handler.hpp</includedby>
    <includedby refid="tcp__networking_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/tcp_networking.hpp</includedby>
    <includedby refid="tcp__stream_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/tcp_stream.hpp</includedby>
    <includedby refid="timer__service_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/timer_service.hpp</includedby>
    <includedby refid="yield_8hpp" local="yes">/home/donald/rupin/zab/includes/zab/yield.hpp</includedby>
    <includedby refid="event__loop_8cpp" local="yes">/home/donald/rupin/zab/src/event_loop.cpp</includedby>
    <includedby refid="signal__handler_8cpp" local="yes">/home/donald/rupin/zab/src/signal_handler.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="6">
        <label>ostream</label>
      </node>
      <node id="1">
        <label>/home/donald/rupin/zab/includes/zab/strong_types.hpp</label>
        <link refid="strong__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
      <node id="3">
        <label>concepts</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28">
        <label>/home/donald/rupin/zab/includes/zab/simple_future.hpp</label>
        <link refid="simple__future_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/donald/rupin/zab/includes/zab/for_each.hpp</label>
        <link refid="for__each_8hpp_source"/>
      </node>
      <node id="22">
        <label>/home/donald/rupin/zab/includes/zab/pause.hpp</label>
        <link refid="pause_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/donald/rupin/zab/includes/zab/async_barrier.hpp</label>
        <link refid="async__barrier_8hpp_source"/>
      </node>
      <node id="25">
        <label>/home/donald/rupin/zab/includes/zab/reusable_promise.hpp</label>
        <link refid="reusable__promise_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/donald/rupin/zab/includes/zab/event_loop.hpp</label>
        <link refid="event__loop_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/donald/rupin/zab/includes/zab/simple_promise.hpp</label>
        <link refid="simple__promise_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/donald/rupin/zab/includes/zab/first_of.hpp</label>
        <link refid="first__of_8hpp_source"/>
      </node>
      <node id="12">
        <label>/home/donald/rupin/zab/includes/zab/async_semaphore.hpp</label>
        <link refid="async__semaphore_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/donald/rupin/zab/includes/zab/signal_handler.hpp</label>
        <link refid="signal__handler_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/donald/rupin/zab/includes/zab/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/donald/rupin/zab/includes/zab/observable.hpp</label>
        <link refid="observable_8hpp_source"/>
      </node>
      <node id="29">
        <label>/home/donald/rupin/zab/includes/zab/visitor_promise.hpp</label>
        <link refid="visitor__promise_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/donald/rupin/zab/includes/zab/strong_types.hpp</label>
        <link refid="strong__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/donald/rupin/zab/includes/zab/yield.hpp</label>
        <link refid="yield_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/donald/rupin/zab/includes/zab/stateful_awaitable.hpp</label>
        <link refid="stateful__awaitable_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/donald/rupin/zab/includes/zab/network_operation.hpp</label>
        <link refid="network__operation_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/donald/rupin/zab/includes/zab/async_latch.hpp</label>
        <link refid="async__latch_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/donald/rupin/zab/includes/zab/engine.hpp</label>
        <link refid="engine_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/donald/rupin/zab/includes/zab/generic_awaitable.hpp</label>
        <link refid="generic__awaitable_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/donald/rupin/zab/includes/zab/reusable_future.hpp</label>
        <link refid="reusable__future_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/donald/rupin/zab/includes/zab/async_file.hpp</label>
        <link refid="async__file_8hpp_source"/>
      </node>
      <node id="8">
        <label>/home/donald/rupin/zab/includes/zab/tcp_networking.hpp</label>
        <link refid="tcp__networking_8hpp_source"/>
      </node>
      <node id="16">
        <label>/home/donald/rupin/zab/includes/zab/pause_token.hpp</label>
        <link refid="pause__token_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/donald/rupin/zab/includes/zab/engine_enabled.hpp</label>
        <link refid="engine__enabled_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/donald/rupin/zab/includes/zab/tcp_stream.hpp</label>
        <link refid="tcp__stream_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/donald/rupin/zab/includes/zab/async_mutex.hpp</label>
        <link refid="async__mutex_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/donald/rupin/zab/includes/zab/wait_for.hpp</label>
        <link refid="wait__for_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/donald/rupin/zab/includes/zab/timer_service.hpp</label>
        <link refid="timer__service_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structzab_1_1thread__t" prot="public">zab::thread_t</innerclass>
    <innerclass refid="structzab_1_1order__t" prot="public">zab::order_t</innerclass>
    <innernamespace refid="namespacezab">zab</innernamespace>
    <innernamespace refid="namespacezab_1_1thread">zab::thread</innernamespace>
    <innernamespace refid="namespacezab_1_1order">zab::order</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>MMM&quot;&quot;&quot;AMV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>db<sp/><sp/><sp/><sp/><sp/><sp/>`7MM&quot;&quot;&quot;Yp,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>M&apos;<sp/><sp/><sp/>AMV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>;MM:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MM<sp/><sp/><sp/><sp/>Yb</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>&apos;<sp/><sp/><sp/>AMV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,V^MM.<sp/><sp/><sp/><sp/><sp/><sp/>MM<sp/><sp/><sp/><sp/>dP</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AMV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,M<sp/><sp/>`MM<sp/><sp/><sp/><sp/><sp/><sp/>MM&quot;&quot;&quot;bg.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>AMV<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>AbmmmqMA<sp/><sp/><sp/><sp/><sp/>MM<sp/><sp/><sp/><sp/>`Y</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>AMV<sp/><sp/><sp/>,M<sp/><sp/><sp/>A&apos;<sp/><sp/><sp/><sp/><sp/>VML<sp/><sp/><sp/><sp/>MM<sp/><sp/><sp/><sp/>,9</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>AMVmmmmMM<sp/>.AMA.<sp/><sp/><sp/>.AMMA..JMMmmmd9</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Donald-Rupin</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/>strong_types.hpp</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZAB_STRONG_TYPES_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZAB_STRONG_TYPES_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;concepts&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zab<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structzab_1_1thread__t" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structzab_1_1thread__t_1a2f161cb6b3e332b4ac5fffa23df942ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t_1a2f161cb6b3e332b4ac5fffa23df942ff" kindref="member">kAnyThread</ref><sp/>=<sp/>std::numeric_limits&lt;std::uint16_t&gt;::max()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uint16_t<sp/><ref refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" kindref="member">thread_</ref><sp/>=<sp/><ref refid="structzab_1_1thread__t_1a2f161cb6b3e332b4ac5fffa23df942ff" kindref="member">kAnyThread</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref></highlight></codeline>
<codeline lineno="71" refid="structzab_1_1thread__t_1a24d1dd67dd5529493217cbd8646f48a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1a24d1dd67dd5529493217cbd8646f48a6" kindref="member">any_thread</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref>{<ref refid="structzab_1_1thread__t_1a2f161cb6b3e332b4ac5fffa23df942ff" kindref="member">kAnyThread</ref>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structzab_1_1thread__t_1a40dc50f68e770502c527e1c6f4acd98e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1a40dc50f68e770502c527e1c6f4acd98e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_second)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structzab_1_1thread__t_1ab4783a229d5b780581e8e200fac2869b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1ab4783a229d5b780581e8e200fac2869b" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_second)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structzab_1_1thread__t_1ae0b484631e0cec16b3bee651972b9b00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1ae0b484631e0cec16b3bee651972b9b00" kindref="member">operator&lt;=&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_second)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_first.<ref refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" kindref="member">thread_</ref><sp/>&lt;=&gt;<sp/>_second.<ref refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" kindref="member">thread_</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>T&gt;</highlight></codeline>
<codeline lineno="117" refid="structzab_1_1thread__t_1a39eaa00209eac8555993971116fdca3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1ae0b484631e0cec16b3bee651972b9b00" kindref="member">operator&lt;=&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>_number)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_first.<ref refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" kindref="member">thread_</ref><sp/>&lt;=&gt;<sp/>_number;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>T&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structzab_1_1thread__t_1a5a1f767b8fba3aa25526fc4d78d433a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1a5a1f767b8fba3aa25526fc4d78d433a7" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref><sp/>_first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>_second)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_first.<ref refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" kindref="member">thread_</ref><sp/>==<sp/>_second;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>T&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structzab_1_1thread__t_1ab000b67ab20838ba4c0a084f36d65a49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1thread__t_1ab000b67ab20838ba4c0a084f36d65a49" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref>&amp;<sp/>_first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>_second)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_first.<ref refid="structzab_1_1thread__t_1ab127b4494e0ba8f77cb40bfee6a4f794" kindref="member">thread_</ref><sp/>!=<sp/>_second;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="namespacezab_1_1thread" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">thread<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="namespacezab_1_1thread_1adec24231853b36f68aeb062077edaacb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1thread_1adec24231853b36f68aeb062077edaacb" kindref="member">in</ref>(std::uint16_t<sp/>_thread)<sp/>noexcept</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref>{_thread};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="namespacezab_1_1thread_1a7593f86d74665a4229345a6a45964068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1thread_1a7593f86d74665a4229345a6a45964068" kindref="member">any</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref>{};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>operator&lt;&lt;(std::ostream&amp;<sp/>_os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>thread_t<sp/>_thread)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;thread[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_thread.thread_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_os;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structzab_1_1order__t" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structzab_1_1order__t_1a5ce9c350dfca9f6e0dc7c6de82bdc750" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uint64_t<sp/><ref refid="structzab_1_1order__t_1a5ce9c350dfca9f6e0dc7c6de82bdc750" kindref="member">order_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="structzab_1_1order__t_1af8e31b771fc4b2b02465f6ab14b0bfdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1order__t_1af8e31b771fc4b2b02465f6ab14b0bfdb" kindref="member">operator&lt;=&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref>&amp;<sp/>_other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="215"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_<sp/>&lt;=&gt;<sp/>_other.<ref refid="structzab_1_1order__t_1a5ce9c350dfca9f6e0dc7c6de82bdc750" kindref="member">order_</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>Integral&gt;</highlight></codeline>
<codeline lineno="224" refid="structzab_1_1order__t_1a8912f376c423bd4b12b3cbde2007298d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1order__t_1af8e31b771fc4b2b02465f6ab14b0bfdb" kindref="member">operator&lt;=&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Integral<sp/>_number)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="226"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_<sp/>&lt;=&gt;<sp/>_number;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structzab_1_1order__t_1ad12cf7dc070cadbda534bfab4fc239f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1order__t_1ad12cf7dc070cadbda534bfab4fc239f2" kindref="member">operator+</ref>(<ref refid="structzab_1_1order__t" kindref="compound">order_t</ref><sp/>_lhs,<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref><sp/>_rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref>{_lhs.<ref refid="structzab_1_1order__t_1a5ce9c350dfca9f6e0dc7c6de82bdc750" kindref="member">order_</ref><sp/>+<sp/>_rhs.order_};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="structzab_1_1order__t_1a36e9ae74c43492032921bd0a23456d48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzab_1_1order__t_1a36e9ae74c43492032921bd0a23456d48" kindref="member">operator-</ref>(<ref refid="structzab_1_1order__t" kindref="compound">order_t</ref><sp/>_lhs,<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref><sp/>_rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref>{_lhs.<ref refid="structzab_1_1order__t_1a5ce9c350dfca9f6e0dc7c6de82bdc750" kindref="member">order_</ref><sp/>-<sp/>_rhs.order_};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="namespacezab_1_1order" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">order<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref></highlight></codeline>
<codeline lineno="270" refid="namespacezab_1_1order_1a999b1309aeb26e6ed1c4873e27b7b28c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1order_1a999b1309aeb26e6ed1c4873e27b7b28c" kindref="member">seconds</ref>(std::uint64_t<sp/>_number)<sp/>noexcept</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref>{_number<sp/>*<sp/>1000000000};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref></highlight></codeline>
<codeline lineno="282" refid="namespacezab_1_1order_1a211983aac9a71263879996e66d374d6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1order_1a211983aac9a71263879996e66d374d6e" kindref="member">in_seconds</ref>(std::uint64_t<sp/>_number)<sp/>noexcept</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacezab_1_1order_1a999b1309aeb26e6ed1c4873e27b7b28c" kindref="member">seconds</ref>(_number);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref></highlight></codeline>
<codeline lineno="294" refid="namespacezab_1_1order_1abc9e62000fe7258d27470383829dbda6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1order_1abc9e62000fe7258d27470383829dbda6" kindref="member">milli</ref>(std::uint64_t<sp/>_number)<sp/>noexcept</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref>{_number<sp/>*<sp/>1000000};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref></highlight></codeline>
<codeline lineno="306" refid="namespacezab_1_1order_1a16c34a396aa5bdcea7a1cd697f2b90c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1order_1a16c34a396aa5bdcea7a1cd697f2b90c7" kindref="member">in_milli</ref>(std::uint64_t<sp/>_number)<sp/>noexcept</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacezab_1_1order_1abc9e62000fe7258d27470383829dbda6" kindref="member">milli</ref>(_number);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref></highlight></codeline>
<codeline lineno="317" refid="namespacezab_1_1order_1a8f4040b70c6aa1d7831db4bdc8a4b5df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezab_1_1order_1a8f4040b70c6aa1d7831db4bdc8a4b5df" kindref="member">now</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzab_1_1order__t" kindref="compound">order_t</ref>{};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>zab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZAB_STRONG_TYPES_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/donald/rupin/zab/includes/zab/strong_types.hpp"/>
  </compounddef>
</doxygen>
