<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structzab_1_1observable_1_1internal__observer" kind="struct" language="C++" prot="public">
    <compoundname>zab::observable::internal_observer</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structzab_1_1observable_1_1internal__observer_1a61c9f68f20d3566b3d6ee3e10d782be9" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex zab::observable&lt; Args &gt;::internal_observer::mtx_</definition>
        <argsstring></argsstring>
        <name>mtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="85" column="45" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1observable_1_1internal__observer_1a58713415a38dd63a8ff3d1dab57620ad" prot="public" static="no" mutable="no">
        <type>pending_result *</type>
        <definition>pending_result* zab::observable&lt; Args &gt;::internal_observer::result_</definition>
        <argsstring></argsstring>
        <name>result_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="86" column="44" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1observable_1_1internal__observer_1aa781a0ba3f824ee3dce08ea13a582290" prot="public" static="no" mutable="no">
        <type>std::coroutine_handle</type>
        <definition>std::coroutine_handle zab::observable&lt; Args &gt;::internal_observer::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="87" column="22" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structzab_1_1observable_1_1internal__observer_1a0a2ff249a517b255838b1eea49e4630d" prot="public" static="no" mutable="no">
        <type><ref refid="structzab_1_1thread__t" kindref="compound">thread_t</ref></type>
        <definition>thread_t zab::observable&lt; Args &gt;::internal_observer::thread_</definition>
        <argsstring></argsstring>
        <name>thread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="88" column="45" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structzab_1_1observable_1_1internal__observer_1aee9df96a404bb9d141e96ccf18eb2fbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zab::observable&lt; Args &gt;::internal_observer::internal_observer</definition>
        <argsstring>()</argsstring>
        <name>internal_observer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="72" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structzab_1_1observable_1_1internal__observer_1a165617ecb71c2f6515a49c25fdbf151d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zab::observable&lt; Args &gt;::internal_observer::~internal_observer</definition>
        <argsstring>()</argsstring>
        <name>~internal_observer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="74" column="21" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="74" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>zab::thread_t</label>
        <link refid="structzab_1_1thread__t"/>
      </node>
      <node id="1">
        <label>zab::observable&lt; Args &gt;::internal_observer</label>
        <childnode refid="2" relation="usage">
          <edgelabel>thread_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/donald/rupin/zab/includes/zab/observable.hpp" line="70" column="13" bodyfile="/home/donald/rupin/zab/includes/zab/observable.hpp" bodystart="70" bodyend="89"/>
    <listofallmembers>
      <member refid="structzab_1_1observable_1_1internal__observer_1aa781a0ba3f824ee3dce08ea13a582290" prot="public" virt="non-virtual"><scope>zab::observable::internal_observer</scope><name>handle_</name></member>
      <member refid="structzab_1_1observable_1_1internal__observer_1aee9df96a404bb9d141e96ccf18eb2fbb" prot="public" virt="non-virtual"><scope>zab::observable::internal_observer</scope><name>internal_observer</name></member>
      <member refid="structzab_1_1observable_1_1internal__observer_1a61c9f68f20d3566b3d6ee3e10d782be9" prot="public" virt="non-virtual"><scope>zab::observable::internal_observer</scope><name>mtx_</name></member>
      <member refid="structzab_1_1observable_1_1internal__observer_1a58713415a38dd63a8ff3d1dab57620ad" prot="public" virt="non-virtual"><scope>zab::observable::internal_observer</scope><name>result_</name></member>
      <member refid="structzab_1_1observable_1_1internal__observer_1a0a2ff249a517b255838b1eea49e4630d" prot="public" virt="non-virtual"><scope>zab::observable::internal_observer</scope><name>thread_</name></member>
      <member refid="structzab_1_1observable_1_1internal__observer_1a165617ecb71c2f6515a49c25fdbf151d" prot="public" virt="non-virtual"><scope>zab::observable::internal_observer</scope><name>~internal_observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
