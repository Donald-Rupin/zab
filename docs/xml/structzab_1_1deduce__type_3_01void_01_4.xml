<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structzab_1_1deduce__type_3_01void_01_4" kind="struct" language="C++" prot="public">
    <compoundname>zab::deduce_type&lt; void &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structzab_1_1deduce__type_3_01void_01_4_1a5a3b6a516a14ee487666332e8fb00a1a" prot="public" static="no">
        <type><ref refid="structzab_1_1promise__void" kindref="compound">promise_void</ref></type>
        <definition>using zab::deduce_type&lt; void &gt;::type =  promise_void</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/donald/rupin/zab/includes/zab/simple_future.hpp" line="65" column="13" bodyfile="/home/donald/rupin/zab/includes/zab/simple_future.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/donald/rupin/zab/includes/zab/simple_future.hpp" line="64" column="5" bodyfile="/home/donald/rupin/zab/includes/zab/simple_future.hpp" bodystart="64" bodyend="66"/>
    <listofallmembers>
      <member refid="structzab_1_1deduce__type_3_01void_01_4_1a5a3b6a516a14ee487666332e8fb00a1a" prot="public" virt="non-virtual"><scope>zab::deduce_type&lt; void &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
